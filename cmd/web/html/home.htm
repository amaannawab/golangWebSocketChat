<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">

    <title>Golang Chat App</title>
    <style>
        .chatbox {
            outline: 1px solid silver;
            min-height: 160px;
            padding: 0.5em
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-3">Golang Chat App</h1>
                <hr>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <h3>Chat</h3>
                
                <p><a href="https://github.com">Go to Github</a></p>
                <div class="form-group">
                    <label for="username">Username:</label>
                    <input type="text" name="username" id="username" class="form-control" autocomplete="off">
                </div>
                <div class="form-group">
                    <label for="message">Message:</label>
                    <input type="text" name="message" id="message" class="form-control" autocomplete="off">
                    <input type="hidden" name="action" id="action">
                </div>
                <hr>
                <a onclick="sendMessageClick(event)" href="javascript:void(0)" class="btn btn-outline-secondary"
                    id="sendBtn">Send Message</a>

                <div class="mt-2 float-end" id="status"></div>
                


                <div id="output" class="chatbox mt-3"></div>
            </div>
            <div class="col-md-4">
                <h3>Who's online</h3>
               
                <ul id="online-users">

                </ul>
            </div>
        </div>
    </div>

    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/reconnecting-websocket/1.0.0/reconnecting-websocket.min.js"
        integrity="sha512-B4skI5FiLurS86aioJx9VfozI1wjqrn6aTdJH+YQUmCZum/ZibPBTX55k5d9XM6EsKePDInkLVrN7vPmJxc1qA=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        let socket = null;
        let o = document.getElementById("output")
        let userField = document.getElementById("username")
        let messageField = document.getElementById("message")

        window.onbeforeunload = () => {
            let jsonData = {}
            console.log("Leaving")
            jsonData["action"] = "left"
            socket.send(JSON.stringify(jsonData))

        }
        document.addEventListener("DOMContentLoaded", () => {
            socket= new ReconnectingWebSocket('ws://127.0.0.1:8080/ws', null , { debug : true , reconnectInterval : 3000 });
            const offline = `<span class="badge bg-danger">Not Connected</span>`
            const online = `<span class="badge bg-success">Connected</span>`
            let statusDiv = document.getElementById("status");
            


            socket.onopen = () => {
                console.log("successfully connected")
                statusDiv.innerHTML = online
            }
            socket.onclose = () => {
                console.log("connection closed")
                statusDiv.innerHTML = offline
            }
            socket.onerror = error => {
                console.log("there was an error", error)
            }
            socket.onmessage = msg => {

                let data = JSON.parse(msg.data)
                console.log(data);
                switch (data.action) {
                    case "list_users":
                        let ul = document.getElementById("online-users")
                        while (ul.firstChild) {
                            ul.removeChild(ul.firstChild)
                        }
                        if (data.connected_users.length > 0) {
                            data.connected_users.forEach(item => {
                                let li = document.createElement("li")
                                li.appendChild(document.createTextNode(item))
                                ul.appendChild(li)
                            });
                        }
                        break;
                    case "broadcast":
                        o.innerHTML = o.innerHTML + data.message + `<br>`;
                        break;
                }
            }

            let userInput = document.getElementById("username")
            userInput.addEventListener("change", function () {
                let jsonData = {}
                jsonData["action"] = "username";
                jsonData["username"] = this.value;
                socket.send(JSON.stringify(jsonData));


            })


        })
        function sendMessage() {
            let message = document.getElementById("message")
            let jsonData = {
                action: "broadcast",
                username: document.getElementById("username").value,
                message: message.value
            }
            socket.send(JSON.stringify(jsonData))
            message.value = ""

        }
        document.getElementById("message").addEventListener("keydown", function (e) {


            if (e.code === "Enter") {
                if (!socket) {
                    console.log("no connection")
                    return false
                }
                if (userField.value === "" || messageField.value === "") {
                    Toastify({
                        text: "Please Fill out username and message",
                        duration: 3000,
                        newWindow: true,
                        close: true,
                        gravity: "bottom", // `top` or `bottom`
                        position: "right", // `left`, `center` or `right`
                        stopOnFocus: true, // Prevents dismissing of toast on hover
                        style: {
                            background: "white",
                            color: "black"
                        },
                        onClick: function () { } // Callback after click
                    }).showToast();
                    return false
                }
                e.preventDefault();
                e.stopPropagation();
                sendMessage();

            }
        })
        function sendMessageClick(e) {
            if (userField.value === "" || messageField.value === "") {
                Toastify({
                    text: "Please Fill out username and message",
                    duration: 3000,
                    newWindow: true,
                    close: true,
                    gravity: "bottom", // `top` or `bottom`
                    position: "right", // `left`, `center` or `right`
                    stopOnFocus: true, // Prevents dismissing of toast on hover
                    style: {
                        background: "white",
                        color: "black"
                    },
                    onClick: function () { } // Callback after click
                }).showToast();
                return false
            }
            if (!socket) {
                console.log("no connection")
                return false
            }
            e.preventDefault();
            e.stopPropagation();
            sendMessage();

        }


    </script>
</body>

</html>